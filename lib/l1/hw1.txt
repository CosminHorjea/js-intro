1) Read
=======

https://nodejs.org/en/docs/guides/blocking-vs-non-blocking/
https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/
https://nodejs.org/en/docs/guides/dont-block-the-event-loop/
https://nodejs.org/en/docs/guides/timers-in-node/


https://nodejs.dev/learn/the-nodejs-event-loop
https://nodejs.dev/learn/understanding-process-nexttick
https://nodejs.dev/learn/understanding-setimmediate
https://nodejs.dev/learn/discover-javascript-timers
https://nodejs.dev/learn/javascript-asynchronous-programming-and-callbacks
https://nodejs.dev/learn/understanding-javascript-promises
https://nodejs.dev/learn/modern-asynchronous-javascript-with-async-and-await
https://nodejs.dev/learn/the-nodejs-event-emitter
https://nodejs.dev/learn/error-handling-in-nodejs

Note: If you have time almost all the lectures in https://nodejs.dev/learn/ seem relevant and well made

2) Practice
===========

Create a class hierarchy related to a school catalog. The minimum classes should be:

* Person
  * Employee
	* Teacher
		* DepartmentHead
	* Administrator
	* ProDean
  		* Dean
  * Student

All information regarding the entities must be stored in SQL, so a static method named "create" must be used to
fetch the data from SQL and instantiate the entity (explain why this is needed).

Give them some miscellaneous properties and methods, such as (name, birthDate, grades etc and fire(),
promote(), evaluateStudent() etc). Be careful the state must be persistent -> SQL

Create one version with the "class" keyword and one in the explicit "prototype" + "function" way
